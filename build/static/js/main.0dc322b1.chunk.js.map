{"version":3,"sources":["store/middleware/thunk.js","store/categories.js","store/products.js","store/cart.js","store/index.js","components/header.js","components/footer.js","components/categories.js","components/products.js","components/simplecart.js","App.js","index.js"],"names":["thunk","store","next","action","dispatch","getState","initialState","categories","active","categoryReducer","state","type","payload","products","productReducer","map","product","name","inventoryCount","cart","totalItems","cartReducer","newItem","filter","item","length","forEach","cartItem","itemCount","push","reducers","combineReducers","createStore","applyMiddleware","Header","Grid","container","style","backgroundColor","padding","xs","Footer","currentYear","Date","getFullYear","textAlign","position","bottom","width","connect","setCategory","category","reset","getCategories","axios","get","response","data","results","useEffect","idx","onClick","id","displayName","value","decrement","addToCart","getProducts","console","log","sx","margin","justifyContent","spacing","parseInt","categoryId","Card","Button","Typography","addItem","props","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0dc322b1.chunk.js","sourcesContent":["const thunk = store => next => action =>\n  typeof action === 'function'\n    ? action(store.dispatch, store.getState)\n    : next(action);\n\nexport default thunk;","import axios from 'axios';\n\nlet initialState = {\n  categories: [],\n  active: '',\n};\n\nfunction categoryReducer(state = initialState, action) {\n  let { type, payload } = action;\n\n  switch (type) {\n    case 'SET_ACTIVE_CATEGORY':\n      let categories = [...state.categories];\n      let active = payload;\n      return { categories, active };\n\n    case 'RESET_ACTIVE':\n      return initialState;\n\n    case 'FETCH_CATEGORIES':\n      return { categories: payload };\n\n    default:\n      return state;\n  }\n}\n\nexport const fetchCategories = () => async dispatch => {\n  const response = await axios.get(\n    'https://api-integration-server.herokuapp.com/categories'\n  );\n  dispatch({\n    type: 'FETCH_CATEGORIES',\n    payload: response.data.results,\n  });\n};\n\nexport default categoryReducer;","import axios from 'axios';\n\nlet initialState = {\n  products: [\n  \n  ],\n};\n\nfunction productReducer(state = initialState, action) {\n  let { type, payload } = action;\n\n  switch (type) {\n    case 'UPDATE_INVENTORY':\n      let products = state.products.map(product => {\n        if (product.name === payload) {\n          if (product.inventoryCount !== 0) {\n            return { ...product, inventoryCount: product.inventoryCount - 1 };\n          } else {\n            return product;\n          }\n        } else {\n          return product;\n        }\n      });\n\n      return { products };\n\n    case 'FETCH_PRODUCTS':\n      return { products: payload };\n\n    case 'RESET_INVENTORY':\n      return initialState;\n\n    default:\n      return state;\n  }\n}\n\nexport const fetchProducts = () => async dispatch => {\n  const response = await axios.get(\n    'https://api-integration-server.herokuapp.com/products'\n  );\n  dispatch({\n    type: 'FETCH_PRODUCTS',\n    payload: response.data.results,\n  });\n};\n\nexport default productReducer;","let initialState = {\n  cart: [],\n  totalItems: 0,\n};\n\nfunction cartReducer(state = initialState, action) {\n  let { type, payload } = action;\n\n  switch (type) {\n    case 'ADD_ITEM_CART':\n      let cart = [...state.cart];\n      let totalItems = state.totalItems;\n\n      if (payload.inventoryCount !== 0) {\n        totalItems += 1;\n        let newItem = payload;\n        if (cart.filter(item => item.name === newItem.name).length > 0) {\n          cart.forEach(cartItem => {\n            if (cartItem.name === newItem.name) {\n              cartItem.itemCount += 1;\n            }\n          });\n        } else {\n          cart.push({ name: newItem.name, itemCount: 1 });\n        }\n      }\n      return { cart, totalItems };\n\n    case 'RESET_CART':\n      return initialState;\n\n    default:\n      return state;\n  }\n}\n\nexport default cartReducer;","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from './middleware/thunk.js';\n\nimport categoryReducer from './categories';\nimport productReducer from './products';\nimport cartReducer from './cart';\n\nlet reducers = combineReducers({\n  categories: categoryReducer,\n  products: productReducer,\n  cart: cartReducer,\n});\n\n\n\nlet store = () => {\n  return createStore(reducers, applyMiddleware(thunk));\n};\n\nexport default store;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\n\n\nexport default function Header() {\n\n    return (\n      <Grid container style={{ backgroundColor: 'lightgray', padding: '0 18px 0 18px'}}>\n        <Grid item xs={4}>\n        <h2>My Store</h2>\n        </Grid>\n      </Grid>\n    )\n}","import React from 'react';\n\n\nexport default function Footer() {\n\n  let currentYear = new Date().getFullYear();\n\n  return (\n    <div style={{ backgroundColor: 'lightgray', textAlign: 'center', padding: '2px', position: 'fixed', bottom: '0', width: '96vw'}}>\n      <h2>&copy; {currentYear}  Shams Alsaraireh</h2>\n    </div>\n  )\n}","import { connect } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchCategories } from '../store/categories';\n\nfunction Categories({ categories, setCategory, getCategories }) {\n  useEffect(() => {\n    getCategories();\n  }, [getCategories]);\n\n  return (\n    <>\n      <p>CATEGORIES</p>\n      {categories.categories.map((category, idx) => (\n        <div\n          onClick={() => {\n            setCategory(category.id);\n          }}\n          id={category.displayName}\n          name={category.displayName}\n          value={category.displayName}\n          key={idx}\n        >\n          {category.displayName}\n        </div>\n      ))}\n      Active: {categories.active}\n    </>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    categories: state.categories,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setCategory: category =>\n    dispatch({ type: 'SET_ACTIVE_CATEGORY', payload: category }),\n  reset: () => dispatch({ type: 'RESET_ACTIVE' }),\n  getCategories: () => dispatch(fetchCategories()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);","import { connect } from 'react-redux';\nimport Button from '@mui/material/Button';\nimport { Typography } from '@mui/material';\nimport Grid from '@mui/material/Grid';\nimport Card from '@mui/material/Card';\nimport { fetchProducts } from '../store/products';\nimport { useEffect } from 'react';\n\nfunction Products({ products, getProducts, addToCart, decrement, categories }) {\n  useEffect(() => {\n    getProducts();\n  }, [getProducts]);\n\n  console.log('PRODUCTS', products);\n  console.log('ACTIVE', categories.active);\n\n  return (\n    <>\n      <p>PRODUCTS</p>\n      <Grid\n        sx={{ margin: '50px 0px 0px 0px' }}\n        justifyContent=\"center\"\n        container\n        spacing={1}\n      >\n        {products.products.map((product, idx) => {\n          return (\n            <Grid key={idx} item>\n              {' '}\n              {categories.active === parseInt(product.categoryId) ? (\n                <Card>\n                  <Button\n                    onClick={() => {\n                      decrement(product.name);\n                      addToCart(product);\n                    }}\n                  >\n                    Buy {product.name}!\n                  </Button>\n                  <Typography>{product.inventoryCount}</Typography>\n                </Card>\n              ) : null}\n            </Grid>\n          );\n        })}\n      </Grid>\n    </>\n  );\n}\n\n// layer the state to props\nconst mapStateToProps = state => {\n  return {\n    products: state.products,\n    categories: state.categories,\n    cart: state.cart,\n  };\n};\n// this allows actions to be pumped through our reducer.\nconst mapDispatchToProps = dispatch => ({\n  decrement: product =>\n    dispatch({ type: 'UPDATE_INVENTORY', payload: product }),\n  reset: () => dispatch({ type: 'RESET_INVENTORY' }),\n  addToCart: item => dispatch({ type: 'ADD_ITEM_CART', payload: item }),\n  getProducts: () => dispatch(fetchProducts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);","import { connect } from 'react-redux';\n\nfunction SimpleCart(props) {\n  return (\n    <>\n      <p>CART</p>\n      {props.cart.cart.map((item, idx) => (\n        <div key={idx}>\n          {item.name} count: {item.itemCount}\n        </div>\n      ))}\n      Total: {props.cart.totalItems}\n    </>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch({ type: 'ADD_ITEM_CART', payload: item }),\n  reset: () => dispatch({ type: 'RESET_CART' }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SimpleCart);","import './App.css';\n\nimport { Provider } from 'react-redux';\nimport store from './store/index.js';\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Categories from './components/categories';\nimport Products from './components/products';\nimport SimpleCart from './components/simplecart';\n\nfunction App() {\n  return (\n    <>\n      <Provider store={store()}>\n        <Header />\n        <Categories />\n        <Products />\n        <SimpleCart />\n        <Footer />\n      </Provider>\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}